import { Candle, ActivePosition } from "./bybit.types";
import { OrderSideV5 } from "bybit-api";

export class NotificationService {
  constructor(
    private readonly SYMBOL: string,
    private readonly TRADE_SIZE_USD: number,
    private readonly STOP_LOSS_POINTS: number
  ) {}

  public formatVolumeAlert(
    completedCandle: Candle,
    previousCandle: Candle
  ): string {
    const volumeRatio = completedCandle.volume / previousCandle.volume;
    return (
      `üì¢ –û–ë–ù–ê–†–£–ñ–ï–ù –í–°–ü–õ–ï–°–ö –û–ë–™–ï–ú–ê ${this.SYMBOL}\n\n` +
      `üìà –°–≤–µ—á–∞: ${new Date(
        completedCandle.timestamp
      ).toLocaleTimeString()}\n` +
      `üìä –û–±—ä–µ–º: ${completedCandle.volume.toFixed(
        2
      )} (–≤—ã—Ä–æ—Å –≤ ${volumeRatio.toFixed(2)}x)\n` +
      `üìà –ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—ä–µ–º: ${previousCandle.volume.toFixed(2)}\n` +
      `üí∞ –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: ${completedCandle.close}\n` +
      `üìä –î–≤–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã: ${(
        ((completedCandle.close - completedCandle.open) /
          completedCandle.open) *
        100
      ).toFixed(2)}%`
    );
  }

  public formatTradeOpenAlert(
    activePosition: ActivePosition,
    takeProfit: number,
    stopLoss: number,
    signalCandle: Candle,
    currentCandle: Candle,
    isLimitOrder: boolean = false,
    side: "Buy" | "Sell"
  ): string {
    const contractSize = (
      this.TRADE_SIZE_USD / activePosition.entryPrice
    ).toFixed(3);
    const stopLossLevel =
      activePosition.side === "Buy"
        ? Math.min(signalCandle.low, currentCandle.low)
        : Math.max(signalCandle.high, currentCandle.high);

    return (
      `üéØ ${
        isLimitOrder ? "–õ–ò–ú–ò–¢–ù–´–ô –û–†–î–ï–† –†–ê–ó–ú–ï–©–ï–ù" : "–û–¢–ö–†–´–¢–ê –ù–û–í–ê–Ø –°–î–ï–õ–ö–ê"
      } ${this.SYMBOL}\n\n` +
      `${activePosition.side === "Buy" ? "üìà –õ–û–ù–ì" : "üìâ –®–û–†–¢"}\n` +
      `üÜî Order ID: ${activePosition.orderId}\n` +
      `üíµ ${isLimitOrder ? "–¶–µ–Ω–∞ –æ—Ä–¥–µ—Ä–∞" : "–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞"}: ${
        activePosition.entryPrice
      }\n` +
      `üéØ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: ${takeProfit.toFixed(1)}\n` +
      `üõë –°—Ç–æ–ø-–ª–æ—Å—Å: ${stopLoss.toFixed(1)}\n` +
      `üìä –†–∞—Å—á–µ—Ç —Å—Ç–æ–ø–∞:\n` +
      `  ‚Ä¢ –°–∏–≥–Ω–∞–ª—å–Ω–∞—è —Å–≤–µ—á–∞ (${signalCandle.isGreen ? "üü¢" : "üî¥"}): ${
        signalCandle.isGreen
          ? `High=${signalCandle.high}`
          : `Low=${signalCandle.low}`
      }\n` +
      `  ‚Ä¢ –¢–µ–∫—É—â–∞—è —Å–≤–µ—á–∞: ${
        signalCandle.isGreen
          ? `High=${currentCandle.high}`
          : `Low=${currentCandle.low}`
      }\n` +
      `  ‚Ä¢ –í—ã–±—Ä–∞–Ω ${
        activePosition.side === "Buy" ? "–º–∏–Ω–∏–º—É–º" : "–º–∞–∫—Å–∏–º—É–º"
      }: ${stopLossLevel}\n` +
      `  ‚Ä¢ –°—Ç–æ–ø: ${Math.abs(this.STOP_LOSS_POINTS)} –ø—É–Ω–∫—Ç–æ–≤ ${
        activePosition.side === "Buy" ? "–Ω–∏–∂–µ" : "–≤—ã—à–µ"
      }\n` +
      `üí∞ –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: $${this.TRADE_SIZE_USD} (${contractSize} BTC)\n` +
      `üìà –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: $${(
        (Math.abs(takeProfit - activePosition.entryPrice) /
          activePosition.entryPrice) *
        this.TRADE_SIZE_USD
      ).toFixed(2)}\n` +
      `‚ö†Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É–±—ã—Ç–æ–∫: $${(
        (Math.abs(stopLoss - activePosition.entryPrice) /
          activePosition.entryPrice) *
        this.TRADE_SIZE_USD
      ).toFixed(2)}`
    );
  }

  public formatTradeCloseAlert(
    activePosition: ActivePosition,
    closePrice: number,
    reason: string
  ): string {
    const profit =
      activePosition.side === "Buy"
        ? closePrice - activePosition.entryPrice
        : activePosition.entryPrice - closePrice;

    const profitPercent = (profit / activePosition.entryPrice) * 100;
    const profitUSD =
      (profit / activePosition.entryPrice) * this.TRADE_SIZE_USD;

    // –†–∞—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—É–Ω–∫—Ç–æ–≤
    const points = Math.abs(closePrice - activePosition.entryPrice);

    // –í—Ä–µ–º—è –≤ —Å–¥–µ–ª–∫–µ
    const timeInTrade = Date.now() - activePosition.entryTime;
    const hours = Math.floor(timeInTrade / (1000 * 60 * 60));
    const minutes = Math.floor((timeInTrade % (1000 * 60 * 60)) / (1000 * 60));
    const timeString = hours > 0 ? `${hours}—á ${minutes}–º` : `${minutes}–º`;

    // –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    const resultEmoji = profitUSD >= 0 ? "‚úÖ" : "‚ùå";
    const profitEmoji = profitUSD >= 0 ? "üí∞" : "üí∏";
    const signPrefix = profitUSD >= 0 ? "+" : "";

    return (
      `${resultEmoji} –ü–û–ó–ò–¶–ò–Ø –ó–ê–ö–†–´–¢–ê ${this.SYMBOL}\n\n` +
      `${activePosition.side === "Buy" ? "üìà –õ–û–ù–ì" : "üìâ –®–û–†–¢"}\n` +
      `üÜî Order ID: ${activePosition.orderId || "N/A"}\n` +
      `üìÖ –í—Ä–µ–º—è –≤ —Å–¥–µ–ª–∫–µ: ${timeString}\n\n` +
      `üíµ –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: ${activePosition.entryPrice.toFixed(1)}\n` +
      `üí∞ –¶–µ–Ω–∞ –≤—ã—Ö–æ–¥–∞: ${closePrice.toFixed(1)}\n` +
      `üìè –ü—É–Ω–∫—Ç–æ–≤ –≤–∑—è—Ç–æ: ${points.toFixed(1)}\n\n` +
      `${profitEmoji} –†–ï–ó–£–õ–¨–¢–ê–¢:\n` +
      `üí≤ P&L: ${signPrefix}$${profitUSD.toFixed(2)}\n` +
      `üìä –ü—Ä–æ—Ü–µ–Ω—Ç: ${signPrefix}${profitPercent.toFixed(2)}%\n\n` +
      `‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞: ${reason}`
    );
  }

  public formatTrailingStopUpdate(
    newStopPrice: number,
    trailingDistance: number,
    currentPrice: number
  ): string {
    return `üìà –¢—Ä–µ–π–ª–∏–Ω–≥-—Å—Ç–æ–ø –ø–µ—Ä–µ–¥–≤–∏–Ω—É—Ç: ${newStopPrice.toFixed(
      1
    )} (${trailingDistance} –ø—É–Ω–∫—Ç–æ–≤ –æ—Ç —Ü–µ–Ω—ã ${currentPrice.toFixed(1)}) –¥–ª—è ${
      this.SYMBOL
    }`;
  }

  public formatTrailingStopActivation(): string {
    return `üéØ –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç—Ä–µ–π–ª–∏–Ω–≥-—Å—Ç–æ–ø–∞! –û—Ç–º–µ–Ω—è–µ–º —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç –¥–ª—è ${this.SYMBOL}.`;
  }

  public formatOrderPlacedAlert(
    activePosition: ActivePosition,
    takeProfit: number,
    stopLoss: number,
    signalCandle: Candle,
    currentCandle: Candle,
    orderPrice: number
  ): string {
    const contractSize = (
      this.TRADE_SIZE_USD / activePosition.entryPrice
    ).toFixed(3);
    const stopLossLevel =
      activePosition.side === "Buy"
        ? Math.min(signalCandle.low, currentCandle.low)
        : Math.max(signalCandle.high, currentCandle.high);

    return (
      `üìù –õ–ò–ú–ò–¢–ù–´–ô –û–†–î–ï–† –†–ê–ó–ú–ï–©–ï–ù ${this.SYMBOL}\n\n` +
      `${activePosition.side === "Buy" ? "üìà –õ–û–ù–ì –û–†–î–ï–†" : "üìâ –®–û–†–¢ –û–†–î–ï–†"}\n` +
      `üÜî Order ID: ${activePosition.orderId}\n` +
      `üíµ –¶–µ–Ω–∞ –æ—Ä–¥–µ—Ä–∞: ${orderPrice.toFixed(1)}\n` +
      `üéØ –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¢–ü: ${takeProfit.toFixed(1)}\n` +
      `üõë –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –°–õ: ${stopLoss.toFixed(1)}\n` +
      `üìä –†–∞—Å—á–µ—Ç —Å—Ç–æ–ø–∞:\n` +
      `  ‚Ä¢ –°–∏–≥–Ω–∞–ª—å–Ω–∞—è —Å–≤–µ—á–∞ (${signalCandle.isGreen ? "üü¢" : "üî¥"}): ${
        signalCandle.isGreen
          ? `High=${signalCandle.high}`
          : `Low=${signalCandle.low}`
      }\n` +
      `  ‚Ä¢ –¢–µ–∫—É—â–∞—è —Å–≤–µ—á–∞: ${
        signalCandle.isGreen
          ? `High=${currentCandle.high}`
          : `Low=${currentCandle.low}`
      }\n` +
      `  ‚Ä¢ –í—ã–±—Ä–∞–Ω ${
        activePosition.side === "Buy" ? "–º–∏–Ω–∏–º—É–º" : "–º–∞–∫—Å–∏–º—É–º"
      }: ${stopLossLevel}\n` +
      `  ‚Ä¢ –°—Ç–æ–ø: ${Math.abs(this.STOP_LOSS_POINTS)} –ø—É–Ω–∫—Ç–æ–≤ ${
        activePosition.side === "Buy" ? "–Ω–∏–∂–µ" : "–≤—ã—à–µ"
      }\n` +
      `üí∞ –†–∞–∑–º–µ—Ä: $${this.TRADE_SIZE_USD} (${contractSize} BTC)\n` +
      `‚è≥ –û–ñ–ò–î–ê–ï–ú –ò–°–ü–û–õ–ù–ï–ù–ò–Ø –û–†–î–ï–†–ê...`
    );
  }

  public formatOrderExecutedAlert(
    activePosition: ActivePosition,
    executionPrice: number
  ): string {
    const contractSize = (this.TRADE_SIZE_USD / executionPrice).toFixed(3);

    return (
      `‚úÖ –û–†–î–ï–† –ò–°–ü–û–õ–ù–ï–ù! –ü–û–ó–ò–¶–ò–Ø –û–¢–ö–†–´–¢–ê ${this.SYMBOL}\n\n` +
      `${activePosition.side === "Buy" ? "üìà –õ–û–ù–ì" : "üìâ –®–û–†–¢"}\n` +
      `üÜî Order ID: ${activePosition.orderId}\n` +
      `üíµ –¶–µ–Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è: ${executionPrice.toFixed(1)}\n` +
      `üí∞ –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: $${this.TRADE_SIZE_USD} (${contractSize} BTC)\n` +
      `üéØ –ü–æ–∑–∏—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞, TP/SL –±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏`
    );
  }
}
