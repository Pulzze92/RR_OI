import { Candle, ActivePosition } from "./binance.types";
import { OrderSide } from "binance-api-node";
import { logger } from "../utils/logger";

export class NotificationService {
  constructor(
    private readonly SYMBOL: string,
    private readonly TRADE_SIZE_USD: number,
    private readonly STOP_LOSS_POINTS: number
  ) {}

  public formatVolumeAlert(
    completedCandle: Candle,
    previousCandle: Candle
  ): string {
    const volumeRatio = completedCandle.volume / previousCandle.volume;
    return (
      `üì¢ –û–ë–ù–ê–†–£–ñ–ï–ù –í–°–ü–õ–ï–°–ö –û–ë–™–ï–ú–ê ${this.SYMBOL}\n\n` +
      `üìà –°–≤–µ—á–∞: ${new Date(
        completedCandle.timestamp
      ).toLocaleTimeString()}\n` +
      `üìä –û–±—ä–µ–º: ${completedCandle.volume.toFixed(
        2
      )} (–≤—ã—Ä–æ—Å –≤ ${volumeRatio.toFixed(2)}x)\n` +
      `üìà –ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—ä–µ–º: ${previousCandle.volume.toFixed(2)}\n` +
      `üí∞ –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: ${completedCandle.close}\n` +
      `üìä –î–≤–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã: ${(
        ((completedCandle.close - completedCandle.open) /
          completedCandle.open) *
        100
      ).toFixed(2)}%`
    );
  }

  public formatTradeOpenAlert(
    activePosition: ActivePosition,
    takeProfit: number,
    stopLoss: number,
    signalCandle: Candle,
    currentCandle: Candle,
    isLimitOrder: boolean,
    side: "Buy" | "Sell",
    actualTradeSize?: number,
    candleRange?: number,
    clusterAnalysis?: {
      upperClusterVolume: number;
      middleClusterVolume: number;
      lowerClusterVolume: number;
      dominantZone: "upper" | "middle" | "lower";
      entryDirection: "long" | "short" | "continuation";
    },
    oiAnalysis?: {
      lowerDelta: number;
      middleDelta: number;
      upperDelta: number;
      comparedZone: "upper" | "lower";
      oiTrendInZone: "up" | "down";
      sideByOi: "Buy" | "Sell";
    }
  ): string {
    const tradeSide = side === "Buy" ? "–õ–û–ù–ì" : "–®–û–†–¢";
    const orderType = isLimitOrder ? "–ª–∏–º–∏—Ç–Ω–æ–≥–æ" : "—Ä—ã–Ω–æ—á–Ω–æ–≥–æ";
    const tradeSize = actualTradeSize || this.TRADE_SIZE_USD;
    const contractSize = (tradeSize / activePosition.entryPrice).toFixed(3);
    const stopLossLevel =
      activePosition.side === "Buy"
        ? Math.min(signalCandle.low, currentCandle.low)
        : Math.max(signalCandle.high, currentCandle.high);

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Ç–µ—Ä–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ (—Ç–æ–ª—å–∫–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –±–µ–∑ –≤–µ—Ä–¥–∏–∫—Ç–∞)
    let clusterInfo = "";
    if (clusterAnalysis) {
      const upperPercent = (
        (clusterAnalysis.upperClusterVolume / signalCandle.volume) *
        100
      ).toFixed(1);
      const middlePercent = (
        (clusterAnalysis.middleClusterVolume / signalCandle.volume) *
        100
      ).toFixed(1);
      const lowerPercent = (
        (clusterAnalysis.lowerClusterVolume / signalCandle.volume) *
        100
      ).toFixed(1);

      clusterInfo =
        `\nüìä –ö–õ–ê–°–¢–ï–†–ù–´–ô –ê–ù–ê–õ–ò–ó:\n` +
        `üìà –í–µ—Ä—Ö: ${upperPercent}% | üìä –°—Ä–µ–¥: ${middlePercent}% | üìâ –ù–∏–∑: ${lowerPercent}%\n`;
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± OI-–∞–Ω–∞–ª–∏–∑–µ
    let oiInfo = "";
    if (oiAnalysis) {
      const zoneText =
        oiAnalysis.comparedZone === "lower" ? "–Ω–∏–∂–Ω–µ–π" : "–≤–µ—Ä—Ö–Ω–µ–π";
      const trendText = oiAnalysis.oiTrendInZone === "down" ? "–ø–∞–¥–∞–ª" : "—Ä–æ—Å";
      oiInfo =
        `\nüìà –û–¢–ö–†–´–¢–´–ô –ò–ù–¢–ï–†–ï–° (5–º –∑–∞ —á–∞—Å —Å–∏–≥–Ω–∞–ª–∞):\n` +
        `üìâ –ù–∏–∑: ${oiAnalysis.lowerDelta.toFixed(
          2
        )} | üìä –°—Ä–µ–¥: ${oiAnalysis.middleDelta.toFixed(
          2
        )} | üìà –í–µ—Ä—Ö: ${oiAnalysis.upperDelta.toFixed(2)}\n` +
        `üß≠ –í ${zoneText} —Ç—Ä–µ—Ç–∏ OI ${trendText} ‚Üí —Ä–µ—à–µ–Ω–∏–µ –ø–æ OI: ${
          oiAnalysis.sideByOi === "Buy" ? "–õ–û–ù–ì" : "–®–û–†–¢"
        }`;
    }

    return (
      `üéØ ${
        isLimitOrder ? "–õ–ò–ú–ò–¢–ù–´–ô –û–†–î–ï–† –†–ê–ó–ú–ï–©–ï–ù" : "–û–¢–ö–†–´–¢–ê –ù–û–í–ê–Ø –°–î–ï–õ–ö–ê"
      } ${this.SYMBOL}\n\n` +
      `${activePosition.side === "Buy" ? "üìà –õ–û–ù–ì" : "üìâ –®–û–†–¢"}\n` +
      `üíµ ${
        isLimitOrder ? "–¶–µ–Ω–∞ –æ—Ä–¥–µ—Ä–∞" : "–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞"
      }: ${activePosition.entryPrice.toFixed(2)}\n` +
      `üéØ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: ${takeProfit.toFixed(1)}${
        candleRange
          ? ` (–î–∏–∞–ø–∞–∑–æ–Ω —Å–∏–≥–Ω–∞–ª—å–Ω–æ–π: ${candleRange.toFixed(4)}, ${
              candleRange < 3 ? "—É–∑–∫–∏–π —Ñ–ª–µ—Ç" : "–Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ"
            })`
          : ""
      }\n` +
      `üõë –°—Ç–æ–ø-–ª–æ—Å—Å: ${stopLoss.toFixed(1)}\n` +
      `üí∞ –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: $${tradeSize.toFixed(2)} (${contractSize} SOL)\n` +
      `üìà –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: $${(
        (Math.abs(takeProfit - activePosition.entryPrice) /
          activePosition.entryPrice) *
        tradeSize
      ).toFixed(2)}\n` +
      `‚ö†Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É–±—ã—Ç–æ–∫: $${(
        (Math.abs(stopLoss - activePosition.entryPrice) /
          activePosition.entryPrice) *
        tradeSize
      ).toFixed(2)}` +
      clusterInfo +
      oiInfo
    );
  }

  public formatTradeCloseAlert(
    activePosition: ActivePosition,
    closePrice: number,
    reason: string,
    realPnL?: number,
    actualTradeSize?: number
  ): string {
    const profit =
      activePosition.side === "Buy"
        ? closePrice - activePosition.entryPrice
        : activePosition.entryPrice - closePrice;

    const profitPercent = (profit / activePosition.entryPrice) * 100;

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π P&L –∏–∑ –±–∏—Ä–∂–∏, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏–Ω–∞—á–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º
    const tradeSize = actualTradeSize || this.TRADE_SIZE_USD;
    const profitUSD =
      realPnL !== undefined
        ? realPnL
        : profit * (tradeSize / activePosition.entryPrice);

    // –†–∞—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—É–Ω–∫—Ç–æ–≤
    const points = Math.abs(closePrice - activePosition.entryPrice);

    // –í—Ä–µ–º—è –≤ —Å–¥–µ–ª–∫–µ
    const timeInTrade = Date.now() - activePosition.entryTime;
    const hours = Math.floor(timeInTrade / (1000 * 60 * 60));
    const minutes = Math.floor((timeInTrade % (1000 * 60 * 60)) / (1000 * 60));
    const timeString = hours > 0 ? `${hours}—á ${minutes}–º` : `${minutes}–º`;

    // –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    const resultEmoji = profitUSD >= 0 ? "‚úÖ" : "‚ùå";
    const profitEmoji = profitUSD >= 0 ? "üí∞" : "üí∏";
    const signPrefix = profitUSD >= 0 ? "+" : "";

    return (
      `${resultEmoji} –ü–û–ó–ò–¶–ò–Ø –ó–ê–ö–†–´–¢–ê ${this.SYMBOL}\n\n` +
      `${activePosition.side === "Buy" ? "üìà –õ–û–ù–ì" : "üìâ –®–û–†–¢"}\n` +
      `üìÖ –í—Ä–µ–º—è –≤ —Å–¥–µ–ª–∫–µ: ${timeString}\n\n` +
      `${profitEmoji} –†–ï–ó–£–õ–¨–¢–ê–¢:\n` +
      `üí≤ P&L: ${signPrefix}$${profitUSD.toFixed(2)}\n`
    );
  }

  public formatTrailingStopUpdate(
    newStopPrice: number,
    trailingDistance: number,
    currentPrice: number
  ): string {
    return `üìà –¢—Ä–µ–π–ª–∏–Ω–≥-—Å—Ç–æ–ø –ø–µ—Ä–µ–¥–≤–∏–Ω—É—Ç: ${newStopPrice.toFixed(
      1
    )} (${trailingDistance} –ø—É–Ω–∫—Ç–æ–≤ –æ—Ç —Ü–µ–Ω—ã ${currentPrice.toFixed(1)}) –¥–ª—è ${
      this.SYMBOL
    }`;
  }

  public formatTrailingStopActivation(): string {
    return `üéØ –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç—Ä–µ–π–ª–∏–Ω–≥-—Å—Ç–æ–ø–∞! –û—Ç–º–µ–Ω—è–µ–º —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç –¥–ª—è ${this.SYMBOL}.`;
  }

  public formatOrderPlacedAlert(
    activePosition: ActivePosition,
    takeProfit: number,
    stopLoss: number,
    signalCandle: Candle,
    currentCandle: Candle,
    orderPrice: number,
    actualTradeSize?: number
  ): string {
    const tradeSize = actualTradeSize || this.TRADE_SIZE_USD;
    const contractSize = (tradeSize / activePosition.entryPrice).toFixed(3);
    const stopLossLevel =
      activePosition.side === "Buy"
        ? Math.min(signalCandle.low, currentCandle.low)
        : Math.max(signalCandle.high, currentCandle.high);

    return (
      `üìù –õ–ò–ú–ò–¢–ù–´–ô –û–†–î–ï–† –†–ê–ó–ú–ï–©–ï–ù ${this.SYMBOL}\n\n` +
      `${activePosition.side === "Buy" ? "üìà –õ–û–ù–ì –û–†–î–ï–†" : "üìâ –®–û–†–¢ –û–†–î–ï–†"}\n` +
      `üíµ –¶–µ–Ω–∞ –æ—Ä–¥–µ—Ä–∞: ${orderPrice.toFixed(1)}\n` +
      `üéØ –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –¢–ü: ${takeProfit.toFixed(1)}\n` +
      `üõë –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –°–õ: ${stopLoss.toFixed(1)}\n` +
      `üí∞ –†–∞–∑–º–µ—Ä: $${tradeSize.toFixed(2)} (${contractSize} BTC)\n` +
      `‚è≥ –û–ñ–ò–î–ê–ï–ú –ò–°–ü–û–õ–ù–ï–ù–ò–Ø –û–†–î–ï–†–ê...`
    );
  }

  public formatOrderExecutedAlert(
    activePosition: ActivePosition,
    executionPrice: number,
    actualTradeSize?: number
  ): string {
    const tradeSize = actualTradeSize || this.TRADE_SIZE_USD;
    const contractSize = (tradeSize / executionPrice).toFixed(3);

    return (
      `‚úÖ –û–†–î–ï–† –ò–°–ü–û–õ–ù–ï–ù! –ü–û–ó–ò–¶–ò–Ø –û–¢–ö–†–´–¢–ê ${this.SYMBOL}\n\n` +
      `${activePosition.side === "Buy" ? "üìà –õ–û–ù–ì" : "üìâ –®–û–†–¢"}\n` +
      `üíµ –¶–µ–Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è: ${executionPrice.toFixed(1)}\n` +
      `üí∞ –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: $${tradeSize.toFixed(2)} (${contractSize} SOL)\n` +
      `üéØ –ü–æ–∑–∏—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞, TP/SL –±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏`
    );
  }
}
